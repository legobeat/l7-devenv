# syntax=docker/dockerfile:1.4-labs
ARG CADDY_IMAGE=localhost/l7/caddy:latest
ARG NODE_VERSION=20
FROM ${CADDY_IMAGE} AS fwdproxy
FROM docker.io/node:${NODE_VERSION}-bookworm-slim

RUN apt-get update \
  && DEBIAN_FRONTEND=noninteractive apt-get install -y --no-install-recommends \
    git curl ca-certificates gnupg ssh-client less psmisc jq time man manpages \
    locales fakeroot libpcre3 \
    tar unzip \
    # node-gyp
    brotli libbrotli1 libvips-dev \
    # electron bundling
    file rpm \
    build-essential ccache cmake cmake-format distcc zlib1g-dev libzlcore-dev libffi-dev libssl-dev libyaml-dev \
  && sed -i '/en_US.UTF-8/s/^# //' /etc/locale.gen \
  && locale-gen \
  && echo 'export PATH="${HOME}/.npm-global/bin:/usr/local/lib/node_modules/corepack/shims:${PATH}"' > /etc/profile.d/global-npm-bins-path \
  && rm -rf /var/{cache,lib}/apt


ENV COREPACK_ENABLE_DOWNLOAD_PROMPT=0
ARG NODE_OPTIONS="--no-network-family-autoselection --trace-warnings"

ARG UID=1000
ARG GID=1000
ARG SHELL=/bin/bash
# if UID differs from default: create new user/group; take over /home/node
RUN  bash -c "[ ${GID} != \"1000\" ] && groupadd -g ${GID} -U node userz || true" \
  && bash -c "[ ${UID} != \"1000\" ] && useradd -u ${UID} -g ${GID} -s ${SHELL} -d /home/node user && chown -R ${UID}:${GID} /home/node || true"

WORKDIR /tmp/
COPY imags/node-runner/package.json \
     imags/node-runner/package-lock.json \
     .

COPY --from=fwdproxy \
  --chmod=444 \
  /data/caddy/pki/authorities/local/root.crt \
  # note: the .crt ending is important
  /usr/local/share/ca-certificates/l7-fwd-proxy.crt
ENV NODE_EXTRA_CA_CERTS=/usr/local/share/ca-certificates/l7-fwd-proxy.crt

RUN DEBIAN_FRONTEND=noninteractive dpkg-reconfigure ca-certificates \
  && rm -rf /usr/local/lib/node_modules/corepack \
  && npm ci --omit=dev --ignore-scripts \
  # remove bundled shims to get corepack integration
  && rm -rf /usr/local/bin/yarn* /usr/local/bin/npm /usr/local/bin/npx /usr/local/bin/corepack /opt/yarn* \
  && rm -rf /usr/local/lib/node_modules/* \
  && mv node_modules/* node_modules/.bin /usr/local/lib/node_modules/ \
  # seems strange that this is needed
  && ln -s /usr/local/lib/node_modules/ /usr/local/bin/node_modules \
  && mkdir -p /home/node/.config \
  # /home/user and /home/node made same
  && mv -T /home/node /home/user \
  && ln -sT user /home/node \
  && chmod +x /usr/local/lib/node_modules/corepack/shims/* \
  && chmod 777 /var/tmp /tmp \
  && chown -R node /home/user /home/node

# default trust github.com known ssh key
COPY contrib/data/ssh_known_hosts /etc/ssh/ssh_known_hosts

####

USER ${UID}:${GID}
ENV HOME=/home/node
# fix broken ipv6 on nodejs v20
ARG NODE_OPTIONS="--no-network-family-autoselection --trace-warnings"
ENV NODE_OPTIONS="${NODE_OPTIONS}"
ENV NPM_CONFIG_PREFIX=/home/node/.npm-global

WORKDIR /tmp

COPY imags/node-runner/install-package-managers.sh .
# TODO: integrity checksums / sigchecks for bundled PMs
ARG COREPACK_PMS='npm@10.8.3 npm@10.9.0 npm@10.9.1 npm@10 npm@6.14.18 npm@6 npm@7.24.2 npm@7 npm@9.9.3 npm@9 pnpm@8.15.8 pnpm@8 pnpm@9.4 pnpm@9.5.0 pnpm@9.9.0 pnpm@9.14.2 pnpm@9 yarn@1.22.22 yarn@1 yarn@3.2.1 yarn@3.2.2 yarn@3.4.1 yarn@3.5.1 yarn@3.6.0 yarn@3.6.2 yarn@3 yarn@4.5.2 yarn@4.5.0 yarn@4.4.1 yarn@4.1.1 yarn@4.2.2 yarn@4.3.1 yarn@4.4.1 yarn@4'

ENV PATH=/usr/local/lib/node_modules/.bin:/usr/local/lib/node_modules/corepack/shims:${HOME}/.cache/node/corepack/v1/npm:${HOME}/.corepack/bin:$PATH

RUN ./install-package-managers.sh
RUN corepack enable

RUN mkdir -p /home/node/.cache /home/node/.yarn/berry /home/node/.npm /home/node/.npm-global/bin /home/node/.npm-global/lib
ENV SHELL=${SHELL}

COPY contrib/l*-scripts/bin/*    /usr/local/bin/
COPY --chown=${UID}:${GID} skel/ /home/node/
RUN sed -Ei \
    -e 's#url "git@github.com:"#url "https://github.com"#' \
    -e 's#insteadOf = "https://github.com/"#insteadOf = "git@github.com:"#' \
    /home/node/.gitconfig

ENV COREPACK_DEFAULT_TO_LATEST=0
ENV COREPACK_ENABLE_AUTO_PIN=0
ENV COREPACK_ENABLE_NETWORK=0
ENV COREPACK_ENABLE_STRICT=0
ENV COREPACK_HOME=/home/node/.cache/node/corepack

ARG GIT_AUTHOR_EMAIL="you@example.com"
ARG GIT_AUTHOR_NAME="Your Name"
ARG GIT_COMMITTER_EMAIL=${GIT_AUTHOR_EMAIL}
ARG GIT_COMMITTER_NAME=${GIT_AUTHOR_NAME}
ENV GIT_AUTHOR_EMAIL=${GIT_AUTHOR_EMAIL}
ENV GIT_AUTHOR_NAME=${GIT_AUTHOR_NAME}
ENV GIT_COMMITTER_EMAIL=${GIT_COMMITTER_EMAIL}
ENV GIT_COMMITTER_NAME=${GIT_COMMITTER_NAME}

ENV NODE_PATH=/usr/local/lib/node_modules

# Without disabling enableStrictSettigs, it's impossible to have one unified config file for yarn v3+v4
ENV YARN_ENABLE_STRICT_SETTINGS=false

WORKDIR /src
ENTRYPOINT ["/bin/bash"]
